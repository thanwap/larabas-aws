Description: >
    This is an example of a long running ECS service that needs to connect to another ECS service (product-service)
    via it's load balancer. We use environment variables to pass the URL of the product-service to this one's container(s).
Parameters:

    VPC:
        Description: The VPC that the ECS cluster is deployed to
        Type: AWS::EC2::VPC::Id

    Cluster:
        Description: Please provide the ECS Cluster ID that this service should run on
        Type: String

    DesiredCount:
        Description: How many instances of this task should we run across our cluster?
        Type: Number
        Default: 2

    ListenerHTTP:
        Description: The Application Load Balancer listener to register with
        Type: String

    ListenerHTTPS:
        Description: The Application Load Balancer listener to register with
        Type: String

    Path:
        Description: The path to register with the Application Load Balancer
        Type: String
        Default: /

    ECR:
        Description: ECR
        Type: String

    APPURL:
        Description: Laravel environment variable
        Type: String

    DBCONNECTION:
        Description: Laravel environment variable
        Type: String

    DBHOST:
        Description: Laravel environment variable
        Type: String

    DBPORT:
        Description: Laravel environment variable
        Type: String

    DBDATABASE:
        Description: Laravel environment variable
        Type: String

    DBUSERNAME:
        Description: Laravel environment variable
        Type: String

    DBPASSWORD:
        Description: Laravel environment variable
        Type: String

    MAILDRIVER:
        Description: Laravel environment variable
        Type: String

    MAILHOST:
        Description: Laravel environment variable
        Type: String

    MAILPORT:
        Description: Laravel environment variable
        Type: String

    MAILUSERNAME:
        Description: Laravel environment variable
        Type: String

    MAILPASSWORD:
        Description: Laravel environment variable
        Type: String

    MAILFROMADDRESS:
        Description: Laravel environment variable
        Type: String

    MAILFROMNAME:
        Description: Laravel environment variable
        Type: String

#    ELASTICSEARCHHOST:
#        Description: Laravel environment variable
#        Type: String
#
#    ELASTICSEARCHPORT:
#        Description: Laravel environment variable
#        Type: String

    FILESYSTEMDRIVER:
        Description: Laravel environment variable
        Type: String

    AWSBUCKET:
        Description: Laravel environment variable
        Type: String

    QUEUEDRIVER:
        Description: Laravel environment variable
        Type: String

    QUEUENAME:
        Description: Laravel environment variable
        Type: String

Resources:

    Service:
        Type: AWS::ECS::Service
        DependsOn:
          - ListenerRuleHTTPS
        Properties:
            Cluster: !Ref Cluster
            Role: !Ref ServiceRole
            DesiredCount: !Ref DesiredCount
            TaskDefinition: !Ref TaskDefinition
            LoadBalancers:
                - ContainerName: nginx
                  ContainerPort: 80
                  TargetGroupArn: !Ref TargetGroup

    ServiceWorkers:
        Type: AWS::ECS::Service
        Properties:
            Cluster: !Ref Cluster
            DesiredCount: 1
            TaskDefinition: !Ref TaskDefinitionWorker

    ServiceCron:
        Type: AWS::ECS::Service
        Properties:
            Cluster: !Ref Cluster
            DesiredCount: 1
            TaskDefinition: !Ref TaskDefinitionCron

    ServiceRedirect:
        Type: AWS::ECS::Service
        DependsOn:
          - ListenerRuleHTTP
        Properties:
            Cluster: !Ref Cluster
            Role: !Ref ServiceRole
            DesiredCount: 1
            TaskDefinition: !Ref TaskDefinitionRedirectHTTPtoHTTPS
            LoadBalancers:
                - ContainerName: nginx-to-https
                  ContainerPort: 80
                  TargetGroupArn: !Ref TargetGroupRedirectHTTPSToHTTP

    TaskDefinitionRedirectHTTPtoHTTPS:
        Type: AWS::ECS::TaskDefinition
        Properties:
            Family: nginx-to-https
            ContainerDefinitions:
                - Name: nginx-to-https
                  Essential: true
                  Image: getlionel/nginx-to-https
                  Memory: 128
                  PortMappings:
                    - ContainerPort: 80

    TaskDefinition:
        Type: AWS::ECS::TaskDefinition
        Properties:
            Family: laravel-nginx
            ContainerDefinitions:
                - Name: nginx
                  Essential: true
                  Image: !Join [ ".", [ !Ref "AWS::AccountId", "dkr.ecr", !Ref "AWS::Region", !Join [ ":", [ !Join [ "/", [ "amazonaws.com", !Ref ECR ] ], "nginx" ] ] ] ]
                  Memory: 128
                  PortMappings:
                    - ContainerPort: 80
                  Links:
                    - app
                  LogConfiguration:
                    LogDriver: awslogs
                    Options:
                        awslogs-group: !Ref AWS::StackName
                        awslogs-region: !Ref AWS::Region
                - Name: app
                  Essential: true
                  Image: !Join [ ".", [ !Ref "AWS::AccountId", "dkr.ecr", !Ref "AWS::Region", !Join [ ":", [ !Join [ "/", [ "amazonaws.com", !Ref ECR ] ], "laravel" ] ] ] ]
                  Memory: 128
                  LogConfiguration:
                    LogDriver: awslogs
                    Options:
                        awslogs-group: !Ref AWS::StackName
                        awslogs-region: !Ref AWS::Region
                  Environment:
                    - Name: APP_NAME
                      Value: Laravel
                    - Name: APP_ENV
                      Value: production
                    - Name: APP_DEBUG
                      Value: false
                    - Name: APP_LOG_LEVEL
                      Value: error
                    - Name: APP_KEY
                      Value: base64:h2ASblVGbCXbC1buJ8KToZkKIEY69GSiutkAeGo77B0=
                    - Name: APP_URL
                      Value: !Ref APPURL
                    - Name: DB_CONNECTION
                      Value: !Ref DBCONNECTION
                    - Name: DB_HOST
                      Value: !Ref DBHOST
                    - Name: DB_PORT
                      Value: !Ref DBPORT
                    - Name: DB_DATABASE
                      Value: !Ref DBDATABASE
                    - Name: DB_USERNAME
                      Value: !Ref DBUSERNAME
                    - Name: DB_PASSWORD
                      Value: !Ref DBPASSWORD
                    - Name: CACHE_DRIVER
                      Value: file
                    - Name: SESSION_DRIVER
                      Value: database
                    - Name: MAIL_DRIVER
                      Value: !Ref MAILDRIVER
                    - Name: MAIL_HOST
                      Value: !Ref MAILHOST
                    - Name: MAIL_PORT
                      Value: !Ref MAILPORT
                    - Name: MAIL_USERNAME
                      Value: !Ref MAILUSERNAME
                    - Name: MAIL_PASSWORD
                      Value: !Ref MAILPASSWORD
                    - Name: MAIL_FROM_ADDRESS
                      Value: !Ref MAILFROMADDRESS
                    - Name: MAIL_FROM_NAME
                      Value: !Ref MAILFROMNAME
#                    - Name: ELASTICSEARCH_HOST
#                      Value: !Ref ELASTICSEARCHHOST
#                    - Name: ELASTICSEARCH_PORT
#                      Value: !Ref ELASTICSEARCHPORT
                    - Name: FILESYSTEM_DRIVER
                      Value: !Ref FILESYSTEMDRIVER
                    - Name: AWS_REGION
                      Value: !Sub ${AWS::Region}
                    - Name: AWS_BUCKET
                      Value: !Ref AWSBUCKET
                    - Name: QUEUE_DRIVER
                      Value: !Ref QUEUEDRIVER
                    - Name: AWS_ACCOUNT_ID
                      Value: !Ref AWS::AccountId
                    - Name: QUEUE_NAME
                      Value: !Ref QUEUENAME

    TaskDefinitionWorker:
        Type: AWS::ECS::TaskDefinition
        Properties:
            Family: laravel-workers
            ContainerDefinitions:
                - Name: app
                  Essential: true
                  Image: !Join [ ".", [ !Ref "AWS::AccountId", "dkr.ecr", !Ref "AWS::Region", !Join [ ":", [ !Join [ "/", [ "amazonaws.com", !Ref ECR ] ], "laravel" ] ] ] ]
                  Command:
                    - "/bin/sh"
                    - "-c"
                    - "php artisan queue:work"
                  Memory: 128
                  LogConfiguration:
                    LogDriver: awslogs
                    Options:
                        awslogs-group: !Ref AWS::StackName
                        awslogs-region: !Ref AWS::Region
                  Environment:
                    - Name: APP_NAME
                      Value: Laravel
                    - Name: APP_ENV
                      Value: production
                    - Name: APP_DEBUG
                      Value: false
                    - Name: APP_LOG_LEVEL
                      Value: error
                    - Name: APP_KEY
                      Value: base64:h2ASblVGbCXbC1buJ8KToZkKIEY69GSiutkAeGo77B0=
                    - Name: APP_URL
                      Value: !Ref APPURL
                    - Name: DB_CONNECTION
                      Value: !Ref DBCONNECTION
                    - Name: DB_HOST
                      Value: !Ref DBHOST
                    - Name: DB_PORT
                      Value: !Ref DBPORT
                    - Name: DB_DATABASE
                      Value: !Ref DBDATABASE
                    - Name: DB_USERNAME
                      Value: !Ref DBUSERNAME
                    - Name: DB_PASSWORD
                      Value: !Ref DBPASSWORD
                    - Name: CACHE_DRIVER
                      Value: file
                    - Name: SESSION_DRIVER
                      Value: database
                    - Name: MAIL_DRIVER
                      Value: !Ref MAILDRIVER
                    - Name: MAIL_HOST
                      Value: !Ref MAILHOST
                    - Name: MAIL_PORT
                      Value: !Ref MAILPORT
                    - Name: MAIL_USERNAME
                      Value: !Ref MAILUSERNAME
                    - Name: MAIL_PASSWORD
                      Value: !Ref MAILPASSWORD
                    - Name: MAIL_FROM_ADDRESS
                      Value: !Ref MAILFROMADDRESS
                    - Name: MAIL_FROM_NAME
                      Value: !Ref MAILFROMNAME
#                    - Name: ELASTICSEARCH_HOST
#                      Value: !Ref ELASTICSEARCHHOST
#                    - Name: ELASTICSEARCH_PORT
#                      Value: !Ref ELASTICSEARCHPORT
                    - Name: FILESYSTEM_DRIVER
                      Value: !Ref FILESYSTEMDRIVER
                    - Name: AWS_REGION
                      Value: !Sub ${AWS::Region}
                    - Name: AWS_BUCKET
                      Value: !Ref AWSBUCKET
                    - Name: QUEUE_DRIVER
                      Value: !Ref QUEUEDRIVER
                    - Name: AWS_ACCOUNT_ID
                      Value: !Ref AWS::AccountId
                    - Name: QUEUE_NAME
                      Value: !Ref QUEUENAME

    TaskDefinitionCron:
        Type: AWS::ECS::TaskDefinition
        Properties:
            Family: laravel-cron
            ContainerDefinitions:
                - Name: app
                  Essential: true
                  Image: !Join [ ".", [ !Ref "AWS::AccountId", "dkr.ecr", !Ref "AWS::Region", !Join [ ":", [ !Join [ "/", [ "amazonaws.com", !Ref ECR ] ], "laravel" ] ] ] ]
                  EntryPoint:
                    - /bin/bash
                    - -c
                  Command:
                    - env /bin/bash -o posix -c 'export -p' > /etc/cron.d/project_env.sh && chmod +x /etc/cron.d/project_env.sh && crontab /etc/cron.d/artisan-schedule-run && cron && tail -f /var/log/cron.log
                  Memory: 128
                  LogConfiguration:
                    LogDriver: awslogs
                    Options:
                        awslogs-group: !Ref AWS::StackName
                        awslogs-region: !Ref AWS::Region
                  Environment:
                    - Name: APP_NAME
                      Value: Laravel
                    - Name: APP_ENV
                      Value: production
                    - Name: APP_DEBUG
                      Value: false
                    - Name: APP_LOG_LEVEL
                      Value: error
                    - Name: APP_KEY
                      Value: base64:h2ASblVGbCXbC1buJ8KToZkKIEY69GSiutkAeGo77B0=
                    - Name: APP_URL
                      Value: !Ref APPURL
                    - Name: DB_CONNECTION
                      Value: !Ref DBCONNECTION
                    - Name: DB_HOST
                      Value: !Ref DBHOST
                    - Name: DB_PORT
                      Value: !Ref DBPORT
                    - Name: DB_DATABASE
                      Value: !Ref DBDATABASE
                    - Name: DB_USERNAME
                      Value: !Ref DBUSERNAME
                    - Name: DB_PASSWORD
                      Value: !Ref DBPASSWORD
                    - Name: CACHE_DRIVER
                      Value: file
                    - Name: SESSION_DRIVER
                      Value: database
                    - Name: MAIL_DRIVER
                      Value: !Ref MAILDRIVER
                    - Name: MAIL_HOST
                      Value: !Ref MAILHOST
                    - Name: MAIL_PORT
                      Value: !Ref MAILPORT
                    - Name: MAIL_USERNAME
                      Value: !Ref MAILUSERNAME
                    - Name: MAIL_PASSWORD
                      Value: !Ref MAILPASSWORD
                    - Name: MAIL_FROM_ADDRESS
                      Value: !Ref MAILFROMADDRESS
                    - Name: MAIL_FROM_NAME
                      Value: !Ref MAILFROMNAME
#                    - Name: ELASTICSEARCH_HOST
#                      Value: !Ref ELASTICSEARCHHOST
#                    - Name: ELASTICSEARCH_PORT
#                      Value: !Ref ELASTICSEARCHPORT
                    - Name: FILESYSTEM_DRIVER
                      Value: !Ref FILESYSTEMDRIVER
                    - Name: AWS_REGION
                      Value: !Sub ${AWS::Region}
                    - Name: AWS_BUCKET
                      Value: !Ref AWSBUCKET
                    - Name: QUEUE_DRIVER
                      Value: !Ref QUEUEDRIVER
                    - Name: QUEUE_NAME
                      Value: !Ref QUEUENAME

    CloudWatchLogsGroup:
        Type: AWS::Logs::LogGroup
        Properties:
            LogGroupName: !Ref AWS::StackName
            RetentionInDays: 365

    TargetGroup:
        Type: AWS::ElasticLoadBalancingV2::TargetGroup
        Properties:
            VpcId: !Ref VPC
            Port: 80
            Protocol: HTTP
            Matcher:
                HttpCode: 200-301
            HealthCheckIntervalSeconds: 10
            HealthCheckPath: /
            HealthCheckProtocol: HTTP
            HealthCheckTimeoutSeconds: 5
            HealthyThresholdCount: 2

    TargetGroupRedirectHTTPSToHTTP:
        Type: AWS::ElasticLoadBalancingV2::TargetGroup
        Properties:
            VpcId: !Ref VPC
            Port: 80
            Protocol: HTTP
            Matcher:
                HttpCode: 200-301
            HealthCheckIntervalSeconds: 10
            HealthCheckPath: /
            HealthCheckProtocol: HTTP
            HealthCheckTimeoutSeconds: 5
            HealthyThresholdCount: 2

    ListenerRuleHTTP:
        Type: AWS::ElasticLoadBalancingV2::ListenerRule
        Properties:
            ListenerArn: !Ref ListenerHTTP
            Priority: 1
            Conditions:
                - Field: path-pattern
                  Values:
                    - !Ref Path
            Actions:
                - TargetGroupArn: !Ref TargetGroupRedirectHTTPSToHTTP
                  Type: forward

    ListenerRuleHTTPS:
        Type: AWS::ElasticLoadBalancingV2::ListenerRule
        Properties:
            ListenerArn: !Ref ListenerHTTPS
            Priority: 1
            Conditions:
                - Field: path-pattern
                  Values:
                    - !Ref Path
            Actions:
                - TargetGroupArn: !Ref TargetGroup
                  Type: forward

    # This IAM Role grants the service access to register/unregister with the
    # Application Load Balancer (ALB). It is based on the default documented here:
    # http://docs.aws.amazon.com/AmazonECS/latest/developerguide/service_IAM_role.html
    ServiceRole:
        Type: AWS::IAM::Role
        Properties:
            RoleName: !Sub ecs-service-${AWS::StackName}
            Path: /
            AssumeRolePolicyDocument: |
                {
                    "Statement": [{
                        "Effect": "Allow",
                        "Principal": { "Service": [ "ecs.amazonaws.com" ]},
                        "Action": [ "sts:AssumeRole" ]
                    }]
                }
            Policies:
                - PolicyName: !Sub ecs-service-${AWS::StackName}
                  PolicyDocument:
                    {
                        "Version": "2012-10-17",
                        "Statement": [{
                                "Effect": "Allow",
                                "Action": [
                                    "ec2:AuthorizeSecurityGroupIngress",
                                    "ec2:Describe*",
                                    "elasticloadbalancing:DeregisterInstancesFromLoadBalancer",
                                    "elasticloadbalancing:Describe*",
                                    "elasticloadbalancing:RegisterInstancesWithLoadBalancer",
                                    "elasticloadbalancing:DeregisterTargets",
                                    "elasticloadbalancing:DescribeTargetGroups",
                                    "elasticloadbalancing:DescribeTargetHealth",
                                    "elasticloadbalancing:RegisterTargets"
                                ],
                                "Resource": "*"
                        }]
                    }

#    ElasticSearch:
#        Type: AWS::Elasticsearch::Domain
#        Properties:
#            DomainName: !Sub ${AWS::StackName}-es
#            ElasticsearchVersion: 5.5
#            ElasticsearchClusterConfig:
#                InstanceType: t2.small.elasticsearch
#                ZoneAwarenessEnabled: false
#                InstanceCount: 1
#            EBSOptions:
#                EBSEnabled: true
#                VolumeSize: 10
#            AccessPolicies:
#              Version: 2012-10-17
#              Statement:
#                - Effect: Allow
#                  Principal:
#                    AWS: "*"
#                  Action:
#                    - es:ESHttpDelete
#                    - es:ESHttpGet
#                    - es:ESHttpHead
#                    - es:ESHttpPost
#                    - es:ESHttpPut
#                  Resource: !Sub arn:aws:es:${AWS::Region}:${AWS::AccountId}:domain/${AWS::StackName}-es/*
#                  Condition:
#                    IpAddress:
#                      aws:SourceIp:
#                        - !GetAtt VPC.Outputs.NatGateway1EIP
#                        - !GetAtt VPC.Outputs.NatGateway2EIP
